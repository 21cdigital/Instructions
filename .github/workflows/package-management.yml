name: package-management

on:
  push:
    branches:
    - main
    - github-actions
    - 'release-**'
  pull_request:
    branches:
    - main
    - github-actions
    - 'release-**'

env:
  LANG: en_US.UTF-8

  SDK: "iphonesimulator14.3"
  DESTINATION: "OS=14.3,name=iPhone 11 Pro"

jobs:
  test:
    name: Check installation
    runs-on: macos-latest

    steps:
      - name: Switch Xcode version
        run: sudo xcode-select --switch /Applications/Xcode_12.3.app

      - name: Check out test repository
        uses: actions/checkout@v2
        with:
          repository: "ephread/InstructionsPackageTest"
          path: "PackageTest"

      - name: Test CocoaPods import
        env:
          WORKSPACE: "InstructionsCocoaPods.xcworkspace"
          SCHEME: "InstructionsCocoaPods"
          TEST_DIRECTORY: "PackageTest/InstructionsCocoaPods"
        run: |
          cd "$TEST_DIRECTORY"
          pod install
          set -o pipefail && xcodebuild test -workspace "$WORKSPACE" -scheme "$SCHEME" \
              -sdk "$SDK" -destination "$DESTINATION" -configuration Debug \
              ONLY_ACTIVE_ARCH=YES | xcpretty -c
          cd ../..

      - name: Test Carthage import
        env:
          PROJECT: "InstructionsCarthage.xcodeproj"
          SCHEME: "InstructionsCarthage"
          TEST_DIRECTORY: "PackageTest/InstructionsCarthage"
        run: |
          cd "$TEST_DIRECTORY"

          # For Xcode 12 make sure EXCLUDED_ARCHS is set to arm architectures otherwise
          # the build will fail on lipo due to duplicate architectures.
          xcconfig=$(mktemp /tmp/static.xcconfig.XXXXXX)

          echo 'EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64__XCODE_1200 = arm64 arm64e armv7 armv7s armv6 armv8' >> $xcconfig
          echo 'EXCLUDED_ARCHS = $(inherited) $(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_$(EFFECTIVE_PLATFORM_SUFFIX)__NATIVE_ARCH_64_BIT_$(NATIVE_ARCH_64_BIT)__XCODE_$(XCODE_VERSION_MAJOR))' >> $xcconfig

          export XCODE_XCCONFIG_FILE="$xcconfig"
          carthage bootstrap

          set -o pipefail && xcodebuild test -project "$PROJECT" -scheme "$SCHEME" \
              -sdk "$SDK" -destination "$DESTINATION" -configuration Debug \
              ONLY_ACTIVE_ARCH=YES | xcpretty -c
          cd ../..

      - name: Test SwiftPM import
        env:
          PROJECT: "InstructionsSwiftPM.xcodeproj"
          SCHEME: "InstructionsSwiftPM"
          TEST_DIRECTORY: "PackageTest/InstructionsSwiftPM"
        run: |
          cd "$TEST_DIRECTORY"
          set -o pipefail && xcodebuild test -project "$PROJECT" -scheme "$SCHEME" \
              -sdk "$SDK" -destination "$DESTINATION" -configuration Debug \
              ONLY_ACTIVE_ARCH=YES | xcpretty -c
          cd ../..
